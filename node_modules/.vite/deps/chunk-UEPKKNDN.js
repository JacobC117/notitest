import {
  Mt,
  zt
} from "./chunk-UXMKZ6XT.js";
import {
  require_jsx_runtime
} from "./chunk-ODHXBHLJ.js";
import {
  __toESM,
  require_react
} from "./chunk-QI53LHDY.js";

// node_modules/@nivo/legends/dist/nivo-legends.es.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var c = __toESM(require_react());
var import_react = __toESM(require_react());
var f = function(e2) {
  var i = e2.x, n = e2.y, o = e2.size, r = e2.fill, l = e2.opacity, a = void 0 === l ? 1 : l, c2 = e2.borderWidth, d2 = void 0 === c2 ? 0 : c2, s2 = e2.borderColor;
  return (0, import_jsx_runtime.jsx)("circle", { r: o / 2, cx: i + o / 2, cy: n + o / 2, fill: r, opacity: a, strokeWidth: d2, stroke: void 0 === s2 ? "transparent" : s2, style: { pointerEvents: "none" } });
};
var m = function(e2) {
  var i = e2.x, n = e2.y, o = e2.size, r = e2.fill, l = e2.opacity, a = void 0 === l ? 1 : l, c2 = e2.borderWidth, d2 = void 0 === c2 ? 0 : c2, s2 = e2.borderColor;
  return (0, import_jsx_runtime.jsx)("g", { transform: "translate(" + i + "," + n + ")", children: (0, import_jsx_runtime.jsx)("path", { d: "\n                    M" + o / 2 + " 0\n                    L" + 0.8 * o + " " + o / 2 + "\n                    L" + o / 2 + " " + o + "\n                    L" + 0.2 * o + " " + o / 2 + "\n                    L" + o / 2 + " 0\n                ", fill: r, opacity: a, strokeWidth: d2, stroke: void 0 === s2 ? "transparent" : s2, style: { pointerEvents: "none" } }) });
};
var v = function(e2) {
  var i = e2.x, n = e2.y, o = e2.size, r = e2.fill, l = e2.opacity, a = void 0 === l ? 1 : l, c2 = e2.borderWidth, d2 = void 0 === c2 ? 0 : c2, s2 = e2.borderColor;
  return (0, import_jsx_runtime.jsx)("rect", { x: i, y: n, fill: r, opacity: a, strokeWidth: d2, stroke: void 0 === s2 ? "transparent" : s2, width: o, height: o, style: { pointerEvents: "none" } });
};
var u = function(e2) {
  var i = e2.x, n = e2.y, o = e2.size, r = e2.fill, l = e2.opacity, a = void 0 === l ? 1 : l, c2 = e2.borderWidth, d2 = void 0 === c2 ? 0 : c2, s2 = e2.borderColor;
  return (0, import_jsx_runtime.jsx)("g", { transform: "translate(" + i + "," + n + ")", children: (0, import_jsx_runtime.jsx)("path", { d: "\n                M" + o / 2 + " 0\n                L" + o + " " + o + "\n                L0 " + o + "\n                L" + o / 2 + " 0\n            ", fill: r, opacity: a, strokeWidth: d2, stroke: void 0 === s2 ? "transparent" : s2, style: { pointerEvents: "none" } }) });
};
function p() {
  return p = Object.assign ? Object.assign.bind() : function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var i = arguments[e2];
      for (var n in i)
        Object.prototype.hasOwnProperty.call(i, n) && (t2[n] = i[n]);
    }
    return t2;
  }, p.apply(this, arguments);
}
var k = { top: 0, right: 0, bottom: 0, left: 0 };
var x = function(t2) {
  var e2, i = t2.direction, n = t2.itemsSpacing, o = t2.padding, r = t2.itemCount, l = t2.itemWidth, a = t2.itemHeight;
  if ("number" != typeof o && ("object" != typeof (e2 = o) || Array.isArray(e2) || null === e2))
    throw new Error("Invalid property padding, must be one of: number, object");
  var c2 = "number" == typeof o ? { top: o, right: o, bottom: o, left: o } : p({}, k, o), d2 = c2.left + c2.right, s2 = c2.top + c2.bottom, h2 = l + d2, g2 = a + s2, f2 = (r - 1) * n;
  return "row" === i ? h2 = l * r + f2 + d2 : "column" === i && (g2 = a * r + f2 + s2), { width: h2, height: g2, padding: c2 };
};
var b = function(t2) {
  var e2 = t2.anchor, i = t2.translateX, n = t2.translateY, o = t2.containerWidth, r = t2.containerHeight, l = t2.width, a = t2.height, c2 = i, d2 = n;
  switch (e2) {
    case "top":
      c2 += (o - l) / 2;
      break;
    case "top-right":
      c2 += o - l;
      break;
    case "right":
      c2 += o - l, d2 += (r - a) / 2;
      break;
    case "bottom-right":
      c2 += o - l, d2 += r - a;
      break;
    case "bottom":
      c2 += (o - l) / 2, d2 += r - a;
      break;
    case "bottom-left":
      d2 += r - a;
      break;
    case "left":
      d2 += (r - a) / 2;
      break;
    case "center":
      c2 += (o - l) / 2, d2 += (r - a) / 2;
  }
  return { x: c2, y: d2 };
};
var S = function(t2) {
  var e2, i, n, o, r, l, a = t2.direction, c2 = t2.justify, d2 = t2.symbolSize, s2 = t2.symbolSpacing, h2 = t2.width, g2 = t2.height;
  switch (a) {
    case "left-to-right":
      e2 = 0, i = (g2 - d2) / 2, o = g2 / 2, l = "central", c2 ? (n = h2, r = "end") : (n = d2 + s2, r = "start");
      break;
    case "right-to-left":
      e2 = h2 - d2, i = (g2 - d2) / 2, o = g2 / 2, l = "central", c2 ? (n = 0, r = "start") : (n = h2 - d2 - s2, r = "end");
      break;
    case "top-to-bottom":
      e2 = (h2 - d2) / 2, i = 0, n = h2 / 2, r = "middle", c2 ? (o = g2, l = "alphabetic") : (o = d2 + s2, l = "text-before-edge");
      break;
    case "bottom-to-top":
      e2 = (h2 - d2) / 2, i = g2 - d2, n = h2 / 2, r = "middle", c2 ? (o = 0, l = "text-before-edge") : (o = g2 - d2 - s2, l = "alphabetic");
  }
  return { symbolX: e2, symbolY: i, labelX: n, labelY: o, labelAnchor: r, labelAlignment: l };
};
var w = { circle: f, diamond: m, square: v, triangle: u };
var X = function(i) {
  var n, l, a, d2, g2, f2, m2, v2, u2, y, k2, x2 = i.x, b2 = i.y, A = i.width, W = i.height, z = i.data, C = i.direction, X2 = void 0 === C ? "left-to-right" : C, Y2 = i.justify, O2 = void 0 !== Y2 && Y2, B2 = i.textColor, H2 = i.background, E = void 0 === H2 ? "transparent" : H2, j = i.opacity, L = void 0 === j ? 1 : j, M = i.symbolShape, F = void 0 === M ? "square" : M, T = i.symbolSize, P = void 0 === T ? 16 : T, V = i.symbolSpacing, R = void 0 === V ? 8 : V, D = i.symbolBorderWidth, q = void 0 === D ? 0 : D, G = i.symbolBorderColor, I = void 0 === G ? "transparent" : G, N = i.onClick, _ = i.onMouseEnter, J = i.onMouseLeave, K = i.toggleSerie, Q = i.effects, U = (0, import_react.useState)({}), Z = U[0], $ = U[1], tt = zt(), et = (0, import_react.useCallback)(function(t2) {
    if (Q) {
      var e2 = Q.filter(function(t3) {
        return "hover" === t3.on;
      }).reduce(function(t3, e3) {
        return p({}, t3, e3.style);
      }, {});
      $(e2);
    }
    null == _ || _(z, t2);
  }, [_, z, Q]), it = (0, import_react.useCallback)(function(t2) {
    if (Q) {
      var e2 = Q.filter(function(t3) {
        return "hover" !== t3.on;
      }).reduce(function(t3, e3) {
        return p({}, t3, e3.style);
      }, {});
      $(e2);
    }
    null == J || J(z, t2);
  }, [J, z, Q]), nt = S({ direction: X2, justify: O2, symbolSize: null != (n = Z.symbolSize) ? n : P, symbolSpacing: R, width: A, height: W }), ot = nt.symbolX, rt = nt.symbolY, lt = nt.labelX, at = nt.labelY, ct = nt.labelAnchor, dt = nt.labelAlignment, st = [N, _, J, K].some(function(t2) {
    return void 0 !== t2;
  }), ht = "function" == typeof F ? F : w[F];
  return (0, import_jsx_runtime.jsxs)("g", { transform: "translate(" + x2 + "," + b2 + ")", style: { opacity: null != (l = Z.itemOpacity) ? l : L }, children: [(0, import_jsx_runtime.jsx)("rect", { width: A, height: W, fill: null != (a = Z.itemBackground) ? a : E, style: { cursor: st ? "pointer" : "auto" }, onClick: function(t2) {
    null == N || N(z, t2), null == K || K(z.id);
  }, onMouseEnter: et, onMouseLeave: it }), c.createElement(ht, p({ id: z.id, x: ot, y: rt, size: null != (d2 = Z.symbolSize) ? d2 : P, fill: null != (g2 = null != (f2 = z.fill) ? f2 : z.color) ? g2 : "black", borderWidth: null != (m2 = Z.symbolBorderWidth) ? m2 : q, borderColor: null != (v2 = Z.symbolBorderColor) ? v2 : I }, z.hidden ? tt.legends.hidden.symbol : void 0)), (0, import_jsx_runtime.jsx)("text", { textAnchor: ct, style: p({}, Mt(tt.legends.text), { fill: null != (u2 = null != (y = null != (k2 = Z.itemTextColor) ? k2 : B2) ? y : tt.legends.text.fill) ? u2 : "black", dominantBaseline: dt, pointerEvents: "none", userSelect: "none" }, z.hidden ? tt.legends.hidden.text : void 0), x: lt, y: at, children: z.label })] });
};
var Y = function(e2) {
  var i = e2.data, n = e2.x, o = e2.y, r = e2.direction, l = e2.padding, a = void 0 === l ? 0 : l, c2 = e2.justify, d2 = e2.effects, s2 = e2.itemWidth, h2 = e2.itemHeight, g2 = e2.itemDirection, f2 = void 0 === g2 ? "left-to-right" : g2, m2 = e2.itemsSpacing, v2 = void 0 === m2 ? 0 : m2, u2 = e2.itemTextColor, p2 = e2.itemBackground, y = void 0 === p2 ? "transparent" : p2, k2 = e2.itemOpacity, b2 = void 0 === k2 ? 1 : k2, S2 = e2.symbolShape, A = e2.symbolSize, W = e2.symbolSpacing, z = e2.symbolBorderWidth, C = e2.symbolBorderColor, w2 = e2.onClick, Y2 = e2.onMouseEnter, O2 = e2.onMouseLeave, B2 = e2.toggleSerie, H2 = x({ itemCount: i.length, itemWidth: s2, itemHeight: h2, itemsSpacing: v2, direction: r, padding: a }).padding, E = "row" === r ? s2 + v2 : 0, j = "column" === r ? h2 + v2 : 0;
  return (0, import_jsx_runtime.jsx)("g", { transform: "translate(" + n + "," + o + ")", children: i.map(function(e3, i2) {
    return (0, import_jsx_runtime.jsx)(X, { data: e3, x: i2 * E + H2.left, y: i2 * j + H2.top, width: s2, height: h2, direction: f2, justify: c2, effects: d2, textColor: u2, background: y, opacity: b2, symbolShape: S2, symbolSize: A, symbolSpacing: W, symbolBorderWidth: z, symbolBorderColor: C, onClick: w2, onMouseEnter: Y2, onMouseLeave: O2, toggleSerie: B2 }, i2);
  }) });
};
var O = function(e2) {
  var i = e2.data, n = e2.containerWidth, o = e2.containerHeight, r = e2.translateX, l = void 0 === r ? 0 : r, a = e2.translateY, c2 = void 0 === a ? 0 : a, d2 = e2.anchor, s2 = e2.direction, h2 = e2.padding, g2 = void 0 === h2 ? 0 : h2, f2 = e2.justify, m2 = e2.itemsSpacing, v2 = void 0 === m2 ? 0 : m2, u2 = e2.itemWidth, p2 = e2.itemHeight, y = e2.itemDirection, k2 = e2.itemTextColor, S2 = e2.itemBackground, A = e2.itemOpacity, W = e2.symbolShape, z = e2.symbolSize, C = e2.symbolSpacing, w2 = e2.symbolBorderWidth, X2 = e2.symbolBorderColor, O2 = e2.onClick, B2 = e2.onMouseEnter, H2 = e2.onMouseLeave, E = e2.toggleSerie, j = e2.effects, L = x({ itemCount: i.length, itemsSpacing: v2, itemWidth: u2, itemHeight: p2, direction: s2, padding: g2 }), M = L.width, F = L.height, T = b({ anchor: d2, translateX: l, translateY: c2, containerWidth: n, containerHeight: o, width: M, height: F }), P = T.x, V = T.y;
  return (0, import_jsx_runtime.jsx)(Y, { data: i, x: P, y: V, direction: s2, padding: g2, justify: f2, effects: j, itemsSpacing: v2, itemWidth: u2, itemHeight: p2, itemDirection: y, itemTextColor: k2, itemBackground: S2, itemOpacity: A, symbolShape: W, symbolSize: z, symbolSpacing: C, symbolBorderWidth: w2, symbolBorderColor: X2, onClick: O2, onMouseEnter: B2, onMouseLeave: H2, toggleSerie: "boolean" == typeof E ? void 0 : E });
};
var B = { start: "left", middle: "center", end: "right" };
var H = function(t2, e2) {
  var i = e2.data, n = e2.containerWidth, o = e2.containerHeight, r = e2.translateX, l = void 0 === r ? 0 : r, a = e2.translateY, c2 = void 0 === a ? 0 : a, d2 = e2.anchor, s2 = e2.direction, h2 = e2.padding, g2 = void 0 === h2 ? 0 : h2, f2 = e2.justify, m2 = void 0 !== f2 && f2, v2 = e2.itemsSpacing, u2 = void 0 === v2 ? 0 : v2, p2 = e2.itemWidth, y = e2.itemHeight, k2 = e2.itemDirection, A = void 0 === k2 ? "left-to-right" : k2, W = e2.itemTextColor, z = e2.symbolSize, C = void 0 === z ? 16 : z, w2 = e2.symbolSpacing, X2 = void 0 === w2 ? 8 : w2, Y2 = e2.theme, O2 = x({ itemCount: i.length, itemWidth: p2, itemHeight: y, itemsSpacing: u2, direction: s2, padding: g2 }), H2 = O2.width, E = O2.height, j = O2.padding, L = b({ anchor: d2, translateX: l, translateY: c2, containerWidth: n, containerHeight: o, width: H2, height: E }), M = L.x, F = L.y, T = "row" === s2 ? p2 + u2 : 0, P = "column" === s2 ? y + u2 : 0;
  t2.save(), t2.translate(M, F), t2.font = Y2.legends.text.fontSize + "px " + (Y2.legends.text.fontFamily || "sans-serif"), i.forEach(function(e3, i2) {
    var n2, o2, r2 = i2 * T + j.left, l2 = i2 * P + j.top, a2 = S({ direction: A, justify: m2, symbolSize: C, symbolSpacing: X2, width: p2, height: y }), c3 = a2.symbolX, d3 = a2.symbolY, s3 = a2.labelX, h3 = a2.labelY, g3 = a2.labelAnchor, f3 = a2.labelAlignment;
    t2.fillStyle = null != (n2 = e3.color) ? n2 : "black", t2.fillRect(r2 + c3, l2 + d3, C, C), t2.textAlign = B[g3], "central" === f3 && (t2.textBaseline = "middle"), t2.fillStyle = null != (o2 = null != W ? W : Y2.legends.text.fill) ? o2 : "black", t2.fillText(String(e3.label), r2 + s3, l2 + h3);
  }), t2.restore();
};

export {
  O,
  H
};
//# sourceMappingURL=chunk-UEPKKNDN.js.map
